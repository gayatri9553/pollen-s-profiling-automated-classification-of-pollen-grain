import os
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras. preprocessing.image import ImageDataGenerator
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
from tensorflow.keras.optimizers import Adam

# Path to Alder pollen dataset (update this path after downloading dataset)
data_dir = '/path/to/alder_pollen_ dataset'

# 1. Preprocess images
img_size = 128
batch_size = 32

datagen = ImageDataGenerator(rescale=1./ 255, validation_split=0.2)

train_data = datagen.flow_from_directory(
    data_dir,
    target_size=(img_size, img_size),
    batch_size=batch_size,
    class_mode='categorical',
    subset='training'
)

val_data = datagen.flow_from_directory(
    data_dir,
    target_size=(img_size, img_size),
    batch_size=batch_size,
    class_mode='categorical',
    subset='validation'
)

# 2. Define CNN Model
model = Sequential([
    Conv2D(32, (3, 3), activation='relu', input_shape=(img_size, img_size, 3)),
    MaxPooling2D(2, 2),
    Conv2D(64, (3, 3), activation='relu'),
    MaxPooling2D(2, 2),
    Flatten(),
    Dense(128, activation='relu'),
    Dropout(0.5),
    Dense(train_data.num_classes, activation='softmax')
])

# 3. Compile Model
model.compile(optimizer=Adam( learning_rate=0.001),
              loss='categorical_ crossentropy',
              metrics=['accuracy'])

# 4. Train Model
history = model.fit(
    train_data,
    epochs=10,
    validation_data=val_data
)

# 5. Save the Model
model.save("alder_pollen_ classifier.h5")